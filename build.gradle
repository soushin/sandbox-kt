version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.3-2'
    ext.grpc_version = '1.6.1'
    ext.alpn_agent_version  = '2.0.6'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.1"
        classpath "com.google.gradle:osdetector-gradle-plugin:1.4.0"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'com.google.osdetector'

sourceCompatibility = 1.8

configurations {
    javaAgent { description "additional lib as jvm agent" }
}

mainClassName = "soushin.sandbox.kt.Application"

repositories {
    mavenCentral()
}

def tcnative_classifier = osdetector.classifier;
if (osdetector.os == "linux" && osdetector.release.isLike("fedora")) {
    tcnative_classifier += "-fedora";
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.1'

    // grpc
    compile "io.grpc:grpc-netty:${grpc_version}"
    compile "io.grpc:grpc-protobuf:${grpc_version}"
    compile "io.grpc:grpc-stub:${grpc_version}"
    compile "com.google.api.grpc:googleapis-common-protos:0.0.3"
    // grpc-tsl
    compile 'io.netty:netty-tcnative:2.0.5.Final:' + tcnative_classifier

    // ALPN
    compile("org.mortbay.jetty.alpn:jetty-alpn-agent:${alpn_agent_version}")
    javaAgent("org.mortbay.jetty.alpn:jetty-alpn-agent:${alpn_agent_version}")

    // test
    testCompile 'junit:junit:4.12'
    testCompile 'io.kotlintest:kotlintest:2.0.1'
    testCompile "io.grpc:grpc-okhttp:${grpc_version}"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        kotlin {
            srcDir 'src/main/kotlin'
        }
        java {
            srcDir 'src/main/java'
            srcDir 'src/main/grpc'
        }
    }
}

task copyAlpnAgentJar (type:Copy) {
    from (configurations.javaAgent)
    into("libs")
}

processResources.dependsOn copyAlpnAgentJar

clean {
    delete "libs/*.jar"
}

test {
    jvmArgs = ["-javaagent:libs/jetty-alpn-agent-${alpn_agent_version}.jar"]
}
